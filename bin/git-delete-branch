#!/usr/bin/env bash

set -e

# Assert there is at least one branch provided
test -z $1 && echo "branch required." 1>&2 && exit 1

for branch in "$@"
do
  remote=$(git config branch.$branch.remote || echo "origin")
  ref=$(git config branch.$branch.merge || echo "refs/heads/$branch")

  git branch -D $branch || true
  # Avoid deleting local upstream
  [ "$remote" == "." ] && continue

  # check if remote branch exists, since set -e, we need to capture error code
  git ls-remote --exit-code --heads $remote $branch || error_code=$?
  if [ "$error_code" -eq 2 ]; then
      echo remote branch "$remote/$branch" not found
  else
    git branch -d -r $remote/$branch
    git push $remote :$ref
  fi
done

